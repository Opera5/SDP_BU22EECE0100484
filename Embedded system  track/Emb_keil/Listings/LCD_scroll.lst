C51 COMPILER V9.60.7.0   LCD_SCROLL                                                        05/31/2024 09:33:58 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE LCD_SCROLL
OBJECT MODULE PLACED IN .\Objects\LCD_scroll.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.exe LCD_scroll.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listing
                    -s\LCD_scroll.lst) TABS(2) OBJECT(.\Objects\LCD_scroll.obj)

line level    source

   1          #include <reg51.h>
   2          sbit rs=P2^0;
   3          sbit rw=P2^1;
   4          sbit e=P2^2;
   5          void delay(unsigned int);
   6          void WriteCommandToLCD(unsigned char ch);
   7          void WriteDataToLCD(unsigned char ch);
   8          void WriteStringToLCD(unsigned char ch[]);
   9          void main(void)
  10          {
  11   1        //  unsigned char ch[]="ES TRAINING";
  12   1        unsigned char ch1[]="GITAM UNIVERSITY, BANGALORE";
  13   1        unsigned int j,k;
  14   1        unsigned int MyData = 20;
  15   1           
  16   1      //LCD Intialization
  17   1        WriteCommandToLCD(0x38); //2 lines and 5×7 matrix
  18   1        WriteCommandToLCD(0x01); //Clear display screen
  19   1        WriteCommandToLCD(0x0E); //Display on, cursor off
  20   1        WriteCommandToLCD(0x80); //Force cursor to the beginning ( 1st line)
  21   1        WriteCommandToLCD(0x06); //Increment cursor (shift cursor to right)
  22   1      
  23   1      //Sending Data to LCD
  24   1        WriteStringToLCD("ES TRAINING"); //Sending the string to LCD
  25   1        WriteCommandToLCD(0xc0); //Force cursor to the beginning ( 2nd line)
  26   1        for(j=0;ch1[j]!='\0';j++)
  27   1          {
  28   2            WriteDataToLCD(ch1[j]); // Sending one character to LCD
  29   2          }
  30   1        for(k=0;k<30;k++)
  31   1          {
  32   2            WriteCommandToLCD(0x1c);// shift entire dispaly right
  33   2          }
  34   1        while(1)
  35   1          {
  36   2            WriteCommandToLCD(0x01); //Clear display screen
  37   2            WriteCommandToLCD(0x80); //Force cursor to the beginning ( 1st line)
  38   2            WriteStringToLCD("CLASS STRENGTH");//Sending String to LCD
  39   2            WriteCommandToLCD(0xc0); //Force cursor to the beginning ( 2nd line)
  40   2            WriteDataToLCD((MyData / 10) + 48);//seperating the first digit of MyData
  41   2            WriteDataToLCD((MyData % 10) + 48);//seperating the first digit of MyData
  42   2            WriteStringToLCD(" STUDENTS"); //Sending String to LCD
  43   2          }
  44   1        //}
  45   1      }
  46          void delay(unsigned int t)////Function for setting 1ms delay
  47          {
  48   1        unsigned int i,j;
  49   1        for(i=0;i<t;i++)
  50   1        for(j=0;j<1275;j++);
  51   1      }
  52          
  53          void WriteCommandToLCD(unsigned char ch) //Function for sending Command
  54          {
C51 COMPILER V9.60.7.0   LCD_SCROLL                                                        05/31/2024 09:33:58 PAGE 2   

  55   1        e=1; 
  56   1        rs=0;
  57   1        rw=0;
  58   1        P1=ch;
  59   1        e=0;
  60   1        delay(20);
  61   1      }
  62          void WriteDataToLCD(unsigned char ch) //Function for sending Data
  63          {
  64   1        e=1;
  65   1        rs=1;
  66   1        rw=0;
  67   1        P1=ch;
  68   1        e=0;
  69   1        delay(20);
  70   1      }
  71          void WriteStringToLCD(unsigned char ch[]) //Function for sending string
  72          {
  73   1        int i;
  74   1         for(i=0;ch[i]!='\0';i++)
  75   1        {
  76   2            WriteDataToLCD(ch[i]);
  77   2        }  
  78   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    298    ----
   CONSTANT SIZE    =     65    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      39
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
